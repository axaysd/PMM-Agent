#!/usr/bin/env python3
"""
Test script to verify PMM Assistant setup
"""

import sys
import os

def test_imports():
    """Test if all required packages can be imported"""
    try:
        import fastapi
        print("‚úÖ FastAPI imported successfully")
    except ImportError as e:
        print(f"‚ùå FastAPI import failed: {e}")
        return False
    
    try:
        import langgraph
        print("‚úÖ LangGraph imported successfully")
    except ImportError as e:
        print(f"‚ùå LangGraph import failed: {e}")
        return False
    
    try:
        import langchain_openai
        print("‚úÖ LangChain OpenAI imported successfully")
    except ImportError as e:
        print(f"‚ùå LangChain OpenAI import failed: {e}")
        return False
    
    try:
        import pandas
        print("‚úÖ Pandas imported successfully")
    except ImportError as e:
        print(f"‚ùå Pandas import failed: {e}")
        return False
    
    return True

def test_config():
    """Test configuration setup"""
    try:
        from config import Config
        print("‚úÖ Config module imported successfully")
        
        # Check if API key is set
        if Config.OPENAI_API_KEY:
            print("‚úÖ OpenAI API key is configured")
        else:
            print("‚ö†Ô∏è  OpenAI API key not set - set OPENAI_API_KEY environment variable")
        
        return True
    except Exception as e:
        print(f"‚ùå Config test failed: {e}")
        return False

def test_workflow():
    """Test LangGraph workflow initialization"""
    try:
        from langgraph_workflow import PositioningWorkflow
        
        # Only test if API key is available
        from config import Config
        if Config.OPENAI_API_KEY:
            workflow = PositioningWorkflow()
            print("‚úÖ LangGraph workflow initialized successfully")
        else:
            print("‚ö†Ô∏è  Skipping workflow test - no API key")
        
        return True
    except Exception as e:
        print(f"‚ùå Workflow test failed: {e}")
        return False

def main():
    """Run all tests"""
    print("üß™ Testing PMM Assistant Setup")
    print("=" * 40)
    
    tests = [
        ("Package Imports", test_imports),
        ("Configuration", test_config),
        ("LangGraph Workflow", test_workflow),
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüîç Testing {test_name}...")
        if test_func():
            passed += 1
        else:
            print(f"‚ùå {test_name} test failed")
    
    print("\n" + "=" * 40)
    print(f"üìä Test Results: {passed}/{total} tests passed")
    
    if passed == total:
        print("üéâ All tests passed! PMM Assistant is ready to run.")
        print("\nTo start the application:")
        print("  python main.py")
        print("\nThen open your browser to:")
        print("  http://localhost:8000")
    else:
        print("‚ùå Some tests failed. Please check the errors above.")
        sys.exit(1)

if __name__ == "__main__":
    main()
